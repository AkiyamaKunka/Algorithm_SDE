{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset134 PingFangSC-Medium;\f2\fnil\fcharset134 PingFangSC-Regular;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red51\green51\blue51;\red255\green255\blue255;\red0\green0\blue0;
\red251\green0\blue183;\red82\green72\blue255;}
{\*\expandedcolortbl;;\cssrgb\c25882\c25882\c25882;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c85098;
\csgenericrgb\c98431\c0\c71765;\csgenericrgb\c32157\c28235\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh17400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/house-robber/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 198. 
\f1 \'b4\'f2\'bc\'d2\'bd\'d9\'c9\'e1}}
\f0\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf1 \cb0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\'b1\'be\'cc\'e2\'b5\'c4\'ba\'cb\'d0\'c4\'cb\'bc\'cf\'eb\'be\'cd\'ca\'c7\
\'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\
\
\'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\'d2\'bb\'b6\'a8\'d2\'aa\'c8\'a5\'d1\'d0\'be\'bf\'c4\'b3\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'d6\
\'b1\'c8\'c8\'e7\'cb\'b5 k \'d2\'aa\'b9\'e6\'b6\'a8\'d2\'bb\'b8\'f6\'d1\'d0\'be\'bf\'b5\'c4\'b6\'d4\'cf\'f3\
\'c4\'c7\'c3\'b4\'bf\'c9\'d2\'d4\'d0\'b4\'d2\'bb\'b8\'f6dp\'ca\'fd\'d7\'e9\'b4\'a2\'b4\'e6 k\'d6\'ae\'c7\'b0\'b5\'c4\'cb\'f9\'d3\'d0\'ba\'cd\
\
k \'b5\'c4\'ba\'cd = \'b5\'c8\'d3\'da \
1. k-2 \'b5\'c4\'ba\'cd + k\'ce\'bb\'d6\'c3\'b5\'c4\'bd\'f0\'b6\'ee\
2. k-1 \'ce\'bb\'d6\'c3\'b5\'c4\'ba\'cd\
\'d1\'a1\'c8\'a1 1\'a1\'a22 \'d6\'d0\'b5\'c4\'d7\'ee\'b4\'f3\'d6\'b5\
\
\'bd\'e1\'ca\'f8\

\f3 \cf5 class \cf1 Solution \{\
\cf5 public\cf1 :\
    \cf5 int \cf1 rob(vector<\cf5 int\cf1 >& nums) \{\
        \cf5 int \cf1 size = nums.size();\
        \cf5 if\cf1 ( size == \cf6 0 \cf1 ) \cf5 return \cf6 0\cf1 ;\
        \cf5 if\cf1 ( size == \cf6 1 \cf1 ) \cf5 return \cf1 nums[\cf6 0\cf1 ];\
        \cf5 if\cf1 ( size == \cf6 2 \cf1 ) \cf5 return \cf1 nums[\cf6 0\cf1 ]>nums[\cf6 1\cf1 ] ? nums[\cf6 0\cf1 ]:nums[\cf6 1\cf1 ];\
        \cf5 else\cf1 \{\
            \cf5 int \cf1 dp[\cf6 1000\cf1 ];\
            \cf5 for \cf1 (\cf5 int \cf1 i = \cf6 0\cf1 ; i < size; i++)\{\
                \cf5 if\cf1 (i==\cf6 0\cf1 )\{\
                    dp[i] = nums[\cf6 0\cf1 ];\
                \}\
                \cf5 else if\cf1 (i==\cf6 1\cf1 )\{\
                    dp[i] = ( nums[\cf6 0\cf1 ]>nums[\cf6 1\cf1 ]?nums[\cf6 0\cf1 ]:nums[\cf6 1\cf1 ] );\
                \}\
                \cf5 else \cf1 \{\
                    dp[i] = (dp[i - \cf6 2\cf1 ] + nums[i] > dp[i - \cf6 1\cf1 ] ? dp[i - \cf6 2\cf1 ] + nums[i] : dp[i - \cf6 1\cf1 ]) > dp[i - \cf6 1\cf1 ] ? (\
                            dp[i - \cf6 2\cf1 ] + nums[i] > dp[i - \cf6 1\cf1 ] ? dp[i - \cf6 2\cf1 ] + nums[i] : dp[i - \cf6 1\cf1 ]) : dp[i - \cf6 1\cf1 ];\
                \}\
            \}\
            \cf5 return \cf1 dp[size-\cf6 1\cf1 ];\
        \}\
        \cf5 return \cf1 -\cf6 1\cf1 ;\
    \}\
\};\
}