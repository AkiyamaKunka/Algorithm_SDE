{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset134 PingFangSC-Medium;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red51\green51\blue51;\red255\green255\blue255;\red0\green0\blue0;
\red251\green0\blue183;\red21\green133\blue255;\red16\green131\blue255;\red82\green72\blue255;\red61\green255\blue240;
\red250\green242\blue255;\red14\green110\blue109;}
{\*\expandedcolortbl;;\cssrgb\c25882\c25882\c25882;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c85098;
\csgenericrgb\c98431\c0\c71765;\csgenericrgb\c8235\c52157\c100000;\csgenericrgb\c6275\c51373\c100000;\csgenericrgb\c32157\c28235\c100000;\csgenericrgb\c23922\c100000\c94118;
\csgenericrgb\c98039\c94902\c100000;\csgenericrgb\c5490\c43137\c42745;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh17400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/palindrome-number/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 9. 
\f1 \'bb\'d8\'ce\'c4\'ca\'fd}}
\f0\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf5 \cb0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 class \cf6 Solution \cf1 \{\
\cf5 public\cf1 :\
    \cf5 bool \cf7 isPalindrome\cf1 (\cf5 int \cf1 x) \{\
        \cf5 if\cf1 ( x < \cf8 0 \cf1 )\
            \cf5 return false\cf1 ;\
        \cf5 if\cf1 ( x<\cf8 10 \cf1 && x>=\cf8 0\cf1 )\
            \cf5 return true\cf1 ;\
        \cf5 int \cf1 cnt = \cf8 1\cf1 ;\
        \cf5 int \cf1 temp = x;\
        \cf6 vector\cf1 <\cf5 int\cf1 > num;\
        \cf5 while\cf1 ( temp/\cf8 10 \cf1 != \cf8 0 \cf1 )\{\
            temp = temp / \cf8 10\cf1 ;\
            cnt++;\
        \}\
        temp = x;\
        \cf5 for \cf1 (\cf5 int \cf1 i = \cf8 0\cf1 ; i < cnt; i++)\{\
            num.\cf9 push_back\cf1 (temp % \cf8 10\cf1 );\
            temp = temp / \cf8 10\cf1 ;\
        \}\
\cf10 //        for (int j = 0; j < num.size(); j++)\
//            cout << num[j];\
        \cf5 int \cf1 left =\cf8 0\cf1 ;\
        \cf5 int \cf1 right = num.\cf9 size\cf1 ()-\cf8 1\cf1 ;\
        \cf5 if\cf1 (num.\cf9 size\cf1 () % \cf8 2 \cf1 ==\cf8 0\cf1 )\{\
            \cf5 for \cf1 (\cf5 int \cf1 i = \cf8 0\cf1 ; i < num.\cf9 size\cf1 ()/\cf8 2\cf1 ; i++)\{\
\
                \cf5 if\cf1 (num\cf11 [\cf1 left\cf11 ]\cf1 !=num\cf11 [\cf1 right\cf11 ] \cf1 )\
                    \cf5 return false\cf1 ;\
                left++;\
                right--;\
            \}\
            \cf5 return true\cf1 ;\
        \}\
        \cf5 else\cf1 \{\
            \cf5 int \cf1 left =\cf8 0\cf1 ;\
            \cf5 int \cf1 right = num.\cf9 size\cf1 ()-\cf8 1\cf1 ;\
            \cf5 for \cf1 (\cf5 int \cf1 i = \cf8 0\cf1 ; i < (num.\cf9 size\cf1 ()-\cf8 1\cf1 )/\cf8 2\cf1 ; i++)\{\
\
                \cf5 if\cf1 (num\cf11 [\cf1 left\cf11 ]\cf1 !=num\cf11 [\cf1 right\cf11 ] \cf1 )\
                    \cf5 return false\cf1 ;\
                left++;\
                right--;\
            \}\
            \cf5 return true\cf1 ;\
        \}\
\
\
    \}\
\};\
}