{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset134 PingFangSC-Semibold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset134 PingFangSC-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh17400\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs34 \cf0 \'cb\'e3\'b7\'a8\'b1\'ca\'bc\'c7
\f1\b0  \
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \
\
\
1.Sort
\f2 \'ba\'af\'ca\'fd\'d3\'d0\'c8\'fd\'b8\'f6\'b2\'ce\'ca\'fd\'a3\'ba\'a3\'a8\'b5\'da\'c8\'fd\'b8\'f6\'b2\'ce\'ca\'fd\'bf\'c9\'b2\'bb\'d0\'b4\'a3\'a9
\f1 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf0 \'a3\'a8
\f1 1
\f2 \'a3\'a9\'b5\'da\'d2\'bb\'b8\'f6\'ca\'c7\'d2\'aa\'c5\'c5\'d0\'f2\'b5\'c4\'ca\'fd\'d7\'e9\'b5\'c4\'c6\'f0\'ca\'bc\'b5\'d8\'d6\'b7\'a1\'a3
\f1 \
\

\f2 \'a3\'a8
\f1 2
\f2 \'a3\'a9\'b5\'da\'b6\'fe\'b8\'f6\'ca\'c7\'bd\'e1\'ca\'f8\'b5\'c4\'b5\'d8\'d6\'b7\'a3\'a8\'d7\'ee\'ba\'f3\'d2\'bb\'ce\'bb\'d2\'aa\'c5\'c5\'d0\'f2\'b5\'c4\'b5\'d8\'d6\'b7\'a3\'a9
\f1 \
\

\f2 \'a3\'a8
\f1 3
\f2 \'a3\'a9\'b5\'da\'c8\'fd\'b8\'f6\'b2\'ce\'ca\'fd\'ca\'c7\'c5\'c5\'d0\'f2\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'c7\'b4\'d3\'b4\'f3\'b5\'bd\'d0\'a1\'d2\'b2\'bf\'c9\'ca\'c7\'b4\'d3\'d0\'a1\'b5\'bd\'b4\'f3\'a3\'ac\'bb\'b9\'bf\'c9\'d2\'d4\'b2\'bb\'d0\'b4\'b5\'da\'c8\'fd\'b8\'f6\'b2\'ce\'ca\'fd\'a3\'ac\'b4\'cb\'ca\'b1\'c4\'ac\'c8\'cf\'b5\'c4\'c5\'c5\'d0\'f2\'b7\'bd\'b7\'a8\'ca\'c7\'b4\'d3\'d0\'a1\'b5\'bd\'b4\'f3\'c5\'c5\'d0\'f2\'a3\'ac\'c8\'e7\'b9\'fb\'cf\'eb\'d3\'c3\'bd\'b5\'d0\'f2\'a3\'ac\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'d0\'b4
\f1 compare
\f2 \'ba\'af\'ca\'fd
\f1 \

\f2 \'d0\'e8\'d2\'aa\'bc\'d3\'c8\'eb\'d2\'bb\'b8\'f6\'b1\'c8\'bd\'cf\'ba\'af\'ca\'fd
\f1 \'a0complare(),
\f2 \'b4\'cb\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b5\'cf\'d6\'b9\'fd\'b3\'cc\'ca\'c7\'d5\'e2\'d1\'f9\'b5\'c4
\f1 \
bool\'a0complare(int\'a0a,int\'a0b)\
\{\
\'a0return\'a0a>b;\
\}\

\f2 \'d5\'e2\'be\'cd\'ca\'c7\'b8\'e6\'cb\'df\'b3\'cc\'d0\'f2\'d2\'aa\'ca\'b5\'cf\'d6\'b4\'d3\'b4\'f3\'b5\'bd\'d0\'a1\'b5\'c4\'c5\'c5\'d0\'f2\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'a1
\f1 \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 2. 
\f3\b lower_bound\

\f1\b0 \
lower_bound()
\f2 \'ba\'af\'ca\'fd\'d0\'e8\'d2\'aa\'bc\'d3\'d4\'d8\'cd\'b7\'ce\'c4\'bc\'fe
\f1 #include<algorithm>,
\f2 \'c6\'e4\'bb\'f9\'b1\'be\'d3\'c3\'cd\'be\'ca\'c7\'b2\'e9\'d5\'d2\'d3\'d0\'d0\'f2\'c7\'f8\'bc\'e4\'a3\'a8\'c7\'b0\'b1\'d5\'ba\'f3\'bf\'aa\'a3\'a9\'d6\'d0\'b5\'da\'d2\'bb\'b8\'f6\'b4\'f3\'d3\'da\'bb\'f2\'b5\'c8\'d3\'da\'c4\'b3\'b8\'f8\'b6\'a8\'d6\'b5\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ac\'c6\'e4\'d6\'d0\'c5\'c5\'d0\'f2\'b9\'e6\'d4\'f2\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'b6\'fe\'d4\'aa\'b9\'d8\'cf\'b5\'c0\'b4\'b1\'ed\'ca\'be\'a1\'a3
\f1 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf0 \'b4\'ab\'c8\'eb\'b2\'ce\'ca\'fd\'cb\'b5\'c3\'f7\'a3\'ba
\f1 \
_First 
\f2 \'d2\'aa\'b2\'e9\'d5\'d2\'c7\'f8\'bc\'e4\'b5\'c4\'c6\'f0\'ca\'bc\'ce\'bb\'d6\'c3
\f1 \
_Last 
\f2 \'d2\'aa\'b2\'e9\'d5\'d2\'c7\'f8\'bc\'e4\'b5\'c4\'bd\'e1\'ca\'f8\'ce\'bb\'d6\'c3
\f1 \
_Val 
\f2 \'b8\'f8\'b6\'a8\'d3\'c3\'c0\'b4\'b2\'e9\'d5\'d2\'b5\'c4\'d6\'b5
\f1 \
_Comp 
\f2 \'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4\'b1\'ed\'ca\'be\'d0\'a1\'d3\'da\'b9\'d8\'cf\'b5\'b5\'c4\'ba\'af\'ca\'fd\'b6\'d4\'cf\'f3\'a3\'ac\'b8\'f9\'be\'dd\'c4\'b3\'b8\'f6\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'f1\'c2\'fa\'d7\'e3\'d0\'a1\'d3\'da\'b9\'d8\'cf\'b5\'b6\'f8\'b7\'b5\'bb\'d8
\f1 true
\f2 \'bb\'f2\'d5\'df
\f1 false\

\f2 \'d7\'a2\'d2\'e2\'a3\'ba\'d2\'aa\'b2\'e9\'d5\'d2\'b5\'c4\'ca\'fd\'d7\'e9\'b1\'d8\'d0\'eb\'ca\'c7\'be\'ad\'b9\'fd\'c5\'c5\'d0\'f2\'ba\'f3\'b5\'c4\'d3\'d0\'d0\'f2\'d0\'f2\'c1\'d0
\f1 \
\

\f2 \'b2\'e9\'d5\'d2\'ca\'fd\'d7\'e9
\f1 a[4]=\{2,4,6,8\}
\f2 \'d6\'d0\'c0\'eb\'d4\'aa\'cb\'d8
\f1 3
\f2 \'d7\'ee\'bd\'fc\'b5\'c4\'d4\'aa\'cb\'d8
\f1 \
\

\f2 \'b4\'fa\'c2\'eb\'a3\'ba
\f1 \
\
#include<iostream> \
#include<algorithm> \
using namespace std; \
int main() \
\{ \
    int a[4] = \{ 2, 4, 6, 8 \}; //
\f2 \'d7\'a2\'d2\'e2\'b4\'cb\'ca\'b1
\f1 a
\f2 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b1\'be\'c9\'ed\'be\'cd\'ca\'c7\'d3\'d0\'d0\'f2\'b5\'c4
\f1  \
    //int * it = lower_bound(a,a+4,3); \
    int pos = lower_bound(a, a + 4, 3) - a; //a
\f2 \'b1\'ed\'ca\'be\'ca\'fd\'d7\'e9\'b5\'c4\'c6\'f0\'ca\'bc\'ce\'bb\'d6\'c3
\f1  \
    cout <<pos<< endl; \
    return 0; \
\}\
\'a0\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
3.find\

\f2 \'b2\'e9\'d5\'d2\'b5\'da\'d2\'bb\'b4\'ce\'b3\'f6\'cf\'d6\'b5\'c4\'c4\'bf\'b1\'ea\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ba
\f1 \
\
#include<iostream>\
\
#include<cstdio>\
\
using namespace std;\
\
\'a0\
\
int main()\{\
\
string s1 = "abcdef";\
\
string s2 = "de";\
\
int ans = s1.find(s2) ; \'a0 //
\f2 \'d4\'da
\f1 S1
\f2 \'d6\'d0\'b2\'e9\'d5\'d2\'d7\'d3\'b4\'ae
\f1 S2\
\
cout<<ans<<endl;\
\
system("pause");\
\
\}\
\

\f2 \'cb\'b5\'c3\'f7\'a3\'ba\'c8\'e7\'b9\'fb\'b2\'e9\'d5\'d2\'b3\'c9\'b9\'a6\'d4\'f2\'ca\'e4\'b3\'f6\'b2\'e9\'d5\'d2\'b5\'bd\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'ce\'bb\'d6\'c3\'a3\'ac\'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f1 -1
\f2 \'a3\'bb
\f1 \
\
\'a0\
\

\f2 \'b2\'e9\'d5\'d2\'b4\'d3\'d6\'b8\'b6\'a8\'ce\'bb\'d6\'c3\'bf\'aa\'ca\'bc\'b5\'c4\'b5\'da\'d2\'bb\'b4\'ce\'b3\'f6\'cf\'d6\'b5\'c4\'c4\'bf\'b1\'ea\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ba
\f1 \
\
\'a0\
\
#include<iostream>\
\
#include<csdtio>\
\
using namespace std;\
\
\'a0\
\
\'a0\
\
\'a0\
\
int main()\{\
\
string s1 = "abcdef";\
\
string s2 = "de";\
\
int ans = s1.find(s2, 2) ; \'a0 //
\f2 \'b4\'d3
\f1 S1
\f2 \'b5\'c4\'b5\'da\'b6\'fe\'b8\'f6\'d7\'d6\'b7\'fb\'bf\'aa\'ca\'bc\'b2\'e9\'d5\'d2\'d7\'d3\'b4\'ae
\f1 S2\
\
cout<<ans<<endl;\
\
system("pause");\
\
\}\
\
\'a0\
\
2.find_first_of()\
\
\'a0\
\

\f2 \'b2\'e9\'d5\'d2\'d7\'d3\'b4\'ae\'d6\'d0\'b5\'c4\'c4\'b3\'b8\'f6\'d7\'d6\'b7\'fb\'d7\'ee\'cf\'c8\'b3\'f6\'cf\'d6\'b5\'c4\'ce\'bb\'d6\'c3\'a1\'a3
\f1 find_first_of()
\f2 \'b2\'bb\'ca\'c7\'c8\'ab\'c6\'a5\'c5\'e4\'a3\'ac\'b6\'f8
\f1 find()
\f2 \'ca\'c7\'c8\'ab\'c6\'a5\'c5\'e4
\f1 \
\
\'a0\
\
\'a0\
\
#include<iostream>\
\
#include<csdtio>\
\
using namespace std;\
\
\'a0\
\
\'a0\
\
\'a0\
\
\'a0\
\
int main()\{\
\
string s1 = "adedef";\
\
string s2 = "dek";\
\
int ans = s1.find_first_of(s2) ; \'a0 //
\f2 \'d4\'da
\f1 S1
\f2 \'d6\'d0\'b2\'e9\'d5\'d2\'d7\'d3\'b4\'ae
\f1 S2\
\
cout<<ans<<endl;\
\
system("pause");\
\
\}\
\

\f2 \'c6\'e4\'d6\'d0
\f1 find_first_of()
\f2 \'d2\'b2\'bf\'c9\'d2\'d4\'d4\'bc\'b6\'a8\'b3\'f5\'ca\'bc\'b2\'e9\'d5\'d2\'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ba
\f1 s1.find_first_of(s2, 2) ;\
\
\'a0\
\
3.find_last_of()\
\

\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'d3\'eb
\f1 find_first_of()
\f2 \'b9\'a6\'c4\'dc\'b2\'ee\'b2\'bb\'b6\'e0\'a3\'ac\'d6\'bb\'b2\'bb\'b9\'fd
\f1 find_first_of()
\f2 \'ca\'c7\'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'c7\'b0\'c3\'e6\'cd\'f9\'ba\'f3\'c3\'e6\'cb\'d1\'cb\'f7\'a3\'ac\'b6\'f8
\f1 find_last_of()
\f2 \'ca\'c7\'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'ba\'f3\'c3\'e6\'cd\'f9\'c7\'b0\'c3\'e6\'cb\'d1\'cb\'f7\'a1\'a3
\f1 \
\
\'a0\
\
4.rfind()\
\

\f2 \'b7\'b4\'cf\'f2\'b2\'e9\'d5\'d2\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'bc\'b4\'d5\'d2\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'d3\'eb\'d7\'d3\'b4\'ae\'c6\'a5\'c5\'e4\'b5\'c4\'ce\'bb\'d6\'c3
\f1 \
\
5.find_first_not_of()\
\

\f2 \'d5\'d2\'b5\'bd\'b5\'da\'d2\'bb\'b8\'f6\'b2\'bb\'d3\'eb\'d7\'d3\'b4\'ae\'c6\'a5\'c5\'e4\'b5\'c4\'ce\'bb\'d6\'c3
\f1 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f2 \'b0\'e6\'c8\'a8\'c9\'f9\'c3\'f7\'a3\'ba\'b1\'be\'ce\'c4\'ce\'aa
\f1 CSDN
\f2 \'b2\'a9\'d6\'f7\'a1\'b8\'d0\'a1\'b0\'d7\'b5\'c4\'bd\'f8\'bd\'d7\'a1\'b9\'b5\'c4\'d4\'ad\'b4\'b4\'ce\'c4\'d5\'c2\'a3\'ac\'d7\'f1\'d1\'ad
\f1  CC 4.0 BY-SA 
\f2 \'b0\'e6\'c8\'a8\'d0\'ad\'d2\'e9\'a3\'ac\'d7\'aa\'d4\'d8\'c7\'eb\'b8\'bd\'c9\'cf\'d4\'ad\'ce\'c4\'b3\'f6\'b4\'a6\'c1\'b4\'bd\'d3\'bc\'b0\'b1\'be\'c9\'f9\'c3\'f7\'a1\'a3
\f1 \

\f2 \'d4\'ad\'ce\'c4\'c1\'b4\'bd\'d3\'a3\'ba
\f1 https://blog.csdn.net/laobai1015/article/details/62426137\
}