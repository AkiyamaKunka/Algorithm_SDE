{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset134 PingFangSC-Regular;
\f3\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red251\green24\blue39;\red251\green0\blue183;\red24\green150\blue255;
\red83\green255\blue121;\red21\green133\blue255;\red105\green31\blue255;\red16\green131\blue255;\red61\green255\blue240;
\red14\green110\blue109;\red82\green72\blue255;\red0\green0\blue0;\red254\green254\blue239;\red255\green255\blue11;
}
{\*\expandedcolortbl;;\csgenericrgb\c98431\c9412\c15294;\csgenericrgb\c98431\c0\c71765;\csgenericrgb\c9412\c58824\c100000;
\csgenericrgb\c32549\c100000\c47451;\csgenericrgb\c8235\c52157\c100000;\csgenericrgb\c41176\c12157\c100000;\csgenericrgb\c6275\c51373\c100000;\csgenericrgb\c23922\c100000\c94118;
\csgenericrgb\c5490\c43137\c42745;\csgenericrgb\c32157\c28235\c100000;\cssrgb\c0\c0\c0;\cssrgb\c99608\c99608\c94902;\cssrgb\c100000\c100000\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh17400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf1 \cb0 #include \cf2 <iostream>\
\cf1 #include \cf2 <string>\
\cf1 #include \cf2 <algorithm>\
\cf1 #include \cf2 <cstdio>\
\cf1 #include \cf2 <vector>\
\cf1 #include \cf2 <set>\
\cf1 #include \cf2 <map>\
\cf1 #include \cf2 <stack>\
\cf3 using namespace \cf4 std\cf1 ;\
#define 
\f1\b \cf5 LOCAL\

\f0\b0 \cf1 #define 
\f1\b \cf5 ALL
\f0\b0 \cf1 (x) x.begin(),x.end()\
#define 
\f1\b \cf5 INS
\f0\b0 \cf1 (x) inserter(x,x.begin())\
\cf3 typedef \cf6 set\cf1 <\cf3 int\cf1 > \cf7 Set\cf1 ;\
\cf6 map\cf1 <\cf7 Set\cf1 ,\cf3 int\cf1 >IDcache;\
\cf6 vector\cf1 <\cf7 Set\cf1 >Setcache;\
\
\cf3 int \cf8 ID\cf1 (\cf7 Set \cf1 x)\{\
    \cf3 if\cf1 (IDcache.\cf9 count\cf1 (x)) \cf3 return \cf1 IDcache\cf10 [\cf1 x\cf10 ]\cf1 ;\
    Setcache.\cf9 push_back\cf1 (x);\
    IDcache\cf10 [\cf1 x\cf10 ]\cf1 =Setcache.\cf9 size\cf1 ()-\cf11 1\cf1 ;\
\}\
\
\cf3 int \cf8 main\cf1 ()\{\
#ifdef 
\f1\b \cf5 LOCAL\
    
\f0\b0 \cf9 freopen\cf1 (\cf2 "/Users/robertwong/CLionProjects/untitled4/datain.txt"\cf1 ,\cf2 "r"\cf1 ,
\f1\b \cf5 stdin
\f0\b0 \cf1 );\
    \cf9 freopen\cf1 (\cf2 "/Users/robertwong/CLionProjects/untitled4/dataout.txt"\cf1 ,\cf2 "w"\cf1 ,
\f1\b \cf5 stdout
\f0\b0 \cf1 );\
#endif\
    \cf3 int \cf1 n;\
    \cf6 stack\cf1 <\cf3 int\cf1 > s;\
    \cf7 string \cf1 temp;\
    cin\cf10 >>\cf1 n;\
    \cf3 for \cf1 (\cf3 int \cf1 i = \cf11 0\cf1 ; i < n; i++)\{\
        cin\cf10 >>\cf1 temp;\
        \cf3 if\cf1 (temp\cf10 [\cf11 0\cf10 ]\cf1 ==\cf2 'P'\cf1 )s.\cf9 push\cf1 (\cf9 ID\cf1 (\cf7 Set\cf1 ()));\
        \cf3 else if\cf1 (temp\cf10 [\cf11 0\cf10 ]\cf1 ==\cf2 'D'\cf1 )s.\cf9 push\cf1 (s.\cf9 top\cf1 ());\
        \cf3 else\cf1 \{\
            \cf7 Set \cf1 x1 = Setcache\cf10 [\cf1 s.\cf9 top\cf1 ()\cf10 ]\cf1 ; s.\cf9 pop\cf1 ();\
            \cf7 Set \cf1 x2 = Setcache\cf10 [\cf1 s.\cf9 top\cf1 ()\cf10 ]\cf1 ; s.poo();\
            \cf7 Set \cf1 x;\
            \cf3 if\cf1 (temp\cf10 [\cf11 0\cf10 ]\cf1 ==\cf2 'U'\cf1 ) \cf9 set_union\cf1 (
\f1\b \cf5 ALL
\f0\b0 \cf1 (x1),
\f1\b \cf5 ALL
\f0\b0 \cf1 (x2),
\f1\b \cf5 INS
\f0\b0 \cf1 (x));\
            \cf3 if\cf1 (temp\cf10 [\cf11 0\cf10 ]\cf1 ==\cf2 'U'\cf1 ) \cf9 set_intersection\cf1 (
\f1\b \cf5 ALL
\f0\b0 \cf1 (x1),
\f1\b \cf5 ALL
\f0\b0 \cf1 (x2),
\f1\b \cf5 INS
\f0\b0 \cf1 (x));\
            \cf3 if\cf1 (temp\cf10 [\cf11 0\cf10 ]\cf1 ==\cf2 'U'\cf1 ) \{\
                x \cf10 =\cf1 x2;\
                x.\cf9 insert\cf1 ((\cf9 ID\cf1 (x1)));\
            \}\
            s.\cf9 push\cf1 (\cf9 ID\cf1 (x));\
        \}\
        cout\cf10 << \cf1 Setcache\cf10 [\cf1 s.\cf9 top\cf1 ()\cf10 ]\cf1 .\cf9 size\cf1 () \cf10 <<\cf9 endl\cf1 ;\
    \}\
\}\
\
\
\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f2\fs26 \cf12 \cb13 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 \'b6\'d4\'d3\'da\'bc\'af\'ba\'cf\'b5\'c4\'bc\'af\'ba\'cf\'a3\'ac\'ce\'d2\'c3\'c7\'ba\'dc\'c4\'d1\'d6\'b1\'bd\'d3\'b1\'ed\'ca\'be\'a3\'ac\'d2\'f2\'b4\'cb\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'bb\'bb\'d2\'bb\'d6\'d6\'cf\'eb\'b7\'a8\'a3\'ac\'bc\'c8\'c8\'bb\'bc\'af\'ba\'cf\'b5\'c4\'bc\'af\'ba\'cf\'c4\'d1\'d2\'d4\'b1\'ed\'ca\'be\'a3\'ac\'ce\'d2\'c3\'c7\'be\'cd\cb14 \'d6\'bb\'d0\'e8\'d2\'aa\'b8\'f8\'c3\'bf\'d6\'d6\'bc\'af\'ba\'cf\'d2\'bb\'b8\'f6\'ce\'a8\'d2\'bb\'b5\'c4
\f3 ID
\f2 \cb13 \'be\'cd\'bf\'c9\'d2\'d4\'c1\'cb\'a3\'ac\'d5\'e2\'d1\'f9\'a3\'ac\cb14 \'bc\'af\'ba\'cf\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'be\'cd\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f3 ID
\f2 \cb13 \'c0\'b4\'b1\'ed\'ca\'be\'a1\'a3\'d2\'bb\'b8\'f6\'bc\'af\'ba\'cf\'be\'cd\'bf\'c9\'d2\'d4\'b1\'ed\'ca\'be\'ce\'aa\'d2\'bb\'b8\'f6
\f3 \cb14 set<int>\cb13 \

\f2 \'d4\'da\'d5\'e2\'c0\'ef\'a3\'ac\'ce\'d2\'c3\'c7\'ca\'b9\'d3\'c3
\f3 STL
\f2 \'d6\'d0\'b5\'c4
\f3 set
\f2 \'bd\'f8\'d0\'d0\'b1\'ed\'ca\'be\'a3\'ac\'be\'cd\'bb\'e1\'c8\'dd\'d2\'d7\'ba\'dc\'b6\'e0\'a3\'ac\cb14 \'bc\'d3\'c8\'eb\'d5\'bb\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'d2\'b2\'be\'cd\'bf\'c9\'d2\'d4\'ca\'c7
\f3 int
\f2 \'c0\'e0\'d0\'cd\'c1\'cb\cb13 \'a1\'a3
\f3 \

\f2 \'d4\'da\'bd\'f8\'d0\'d0\'b2\'d9\'d7\'f7\'ca\'b1\'a3\'ac\cb14 \'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'d3\'c3
\f3 map
\f2 \'bd\'ab\'c3\'bf\'d6\'d6\'bc\'af\'ba\'cf\'d3\'eb\'b6\'d4\'d3\'a6\'b5\'c4
\f3 ID
\f2 \cb13 \'b9\'d8\'c1\'aa\'c6\'f0\'c0\'b4\'a3\'ac\'d5\'e2\'d1\'f9\'d7\'f6\'bc\'c8\'bf\'c9\'d2\'d4\'cd\'ea\'b3\'c9\'b2\'e9\'d5\'d2
\f3 ID
\f2 \'b5\'c4\'c8\'ce\'ce\'f1\'a3\'ac\'bb\'b9\'bf\'c9\'d2\'d4\'cd\'ac\'ca\'b1\'c5\'d0\'b6\'a8\'ca\'c7\'b7\'f1\'b3\'f6\'cf\'d6\'c1\'cb\'d0\'c2\'b5\'c4\'bc\'af\'ba\'cf\'a1\'a3
\f3 \

\f2 \'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'d3\'c3
\f3 vector
\f2 \'d7\'f7\'ce\'aa\'b4\'e6\'b4\'a2\'c3\'bf\'d6\'d6\'bc\'af\'ba\'cf\'b5\'c4
\f3 cache
\f2 \'a3\'ac\'d5\'e2\'d1\'f9\'a3\'ac\'c3\'bf\'b5\'b1
\f3 map
\f2 \'d6\'d0\'c3\'bb\'d3\'d0\'cf\'e0\'d3\'a6\'b5\'c4
\f3 ID
\f2 \'ca\'b1\'a3\'ac\'ce\'d2\'c3\'c7\'be\'cd\'cf\'f2
\f3 vector
\f2 \'d6\'d0\'bc\'d3\'c8\'eb\'d2\'bb\'b8\'f6
\f3 set<int>
\f2 \'d4\'aa\'cb\'d8\'a3\'ac\'b2\'a2\'bd\'ab\'cf\'c2\'b1\'ea\'d7\'f7\'ce\'aa
\f3 ID
\f2 \'bd\'f8\'d0\'d0\'ce\'a8\'d2\'bb\'b5\'c4\'b1\'ea\'ca\'b6\'a1\'a3
\f3 \

\f2 \'ca\'b9\'d3\'c3
\f3 vector
\f2 \'bd\'ab
\f3 set
\f2 \'b4\'e6\'b4\'a2\'c6\'f0\'c0\'b4\'b5\'c4\'ba\'c3\'b4\'a6\'ca\'c7\'a3\'ac\'b7\'b4\'b9\'fd\'c0\'b4\'ce\'d2\'c3\'c7\'d2\'b2\'bf\'c9\'d2\'d4\'d3\'c3
\f3 ID
\f2 \'b2\'e9\'d1\'af\'b5\'bd\'b6\'d4\'d3\'a6\'b5\'c4
\f3 set
\f2 \'a3\'ac\'d5\'e2\'d1\'f9\'a3\'ac\cb14 \'cd\'a8\'b9\'fd
\f3 map
\f2 \'ba\'cd
\f3 vector
\f2 \'a3\'ac\'ce\'d2\'c3\'c7\'ca\'b5\'cf\'d6\'c1\'cb
\f3 set 
\f2 \'b5\'bd
\f3 ID 
\f2 \'b5\'c4\'cb\'ab\'c9\'e4\cb13 \'a1\'a3
\f3 \

\f2 \'d7\'ee\'ba\'f3\'a3\'ac\'ca\'e4\'b3\'f6\'d5\'bb\'b6\'a5\'bc\'af\'ba\'cf\'b5\'c4
\f3 size
\f2 \'ca\'f4\'d0\'d4\'a3\'ac\'bc\'b4\'bf\'c9\'a1\'a3
\f3 \
}