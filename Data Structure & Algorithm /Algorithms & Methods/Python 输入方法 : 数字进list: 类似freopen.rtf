{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red117\green114\blue185;
\red191\green100\blue38;\red254\green187\blue91;\red149\green184\blue79;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c45882\c44706\c72549;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c58431\c72157\c30980;\csgenericrgb\c33725\c51765\c67843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21600\viewh17400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Python 
\f1 \'ca\'e4\'c8\'eb\'b7\'bd\'b7\'a8
\f0  \
\

\f1 \'b5\'da\'d2\'bb\'b8\'f6\'ca\'c7\'c4\'a3\'b7\'c2cpp\'d6\'d0\'b5\'c4
\f0 freopen
\f1 \'ba\'af\'ca\'fd\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 nums = \cf4 list\cf2 (\cf4 map\cf2 (\cf4 int\cf5 , \cf4 input\cf2 ().split()))\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs48 \cf0 \cb1 \'c9\'cf\'b1\'df\'d5\'e2\'b8\'f6\'d3\'c3map\'ba\'af\'ca\'fd\'d2\'bb\'be\'e4\'bb\'b0\'be\'cd\'c4\'dc\'bd\'e2\'be\'f6\'ce\'ca\'cc\'e2\'a1\'ad\'a1\'ad\'ce\'de\'d3\'ef\'c1\'cb\
\

\f0 \

\f1 \'b5\'da\'b6\'fe\'b8\'f6\'b5\'c4\'bb\'b0\'ca\'c7\'b0\'d1\'d2\'bb\'b6\'d1\'ca\'fd\'d7\'d6\'c1\'d0
\f0  
\f1 \'c0\'fd\'c8\'e7
\f0  1 3 5 6 
\f1 \'d5\'e2\'d1\'f9\'b5\'c4\'ca\'fd\'d7\'d6\'b4\'a2\'b4\'e6\'b5\'bd\'d2\'bb\'b8\'f6list\'d6\'d0\'b1\'a3\'b4\'e6\
\'bb\'b9\'ca\'c7\'b1\'c8\'bd\'cf\'bc\'f2\'b5\'a5\'b5\'c4\'b9\'fe\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf5 \cb3 def \cf6 freopen\cf2 (file_name\cf5 , \cf2 mode):\
    \cf5 import \cf2 sys\
    \cf5 if \cf2 mode == \cf7 'r'\cf2 :\
        sys.stdin = \cf4 open\cf2 (file_name\cf5 , \cf2 mode)\
    \cf5 else\cf2 :\
        sys.stdout = \cf4 open\cf2 (file_name\cf5 , \cf2 mode)\
\
\cf5 def \cf6 number_in_list\cf2 ():\
    list1 = []\
    str1 = \cf4 input\cf2 ()\
    list2 = str1.split()\
    i = \cf8 0\
    \cf2 length = \cf4 len\cf2 (list2)\
    \cf5 while \cf2 i < length:\
        list1.append(\cf4 int\cf2 (list2.pop()))\
        i += \cf8 1\
    \cf2 list1.reverse()\
    \cf5 return \cf2 list1\
\
freopen(\cf7 '/Users/robertwong/PycharmProjects/untitled1/data_in.txt'\cf5 ,\cf7 'r'\cf2 )\
freopen(\cf7 '/Users/robertwong/PycharmProjects/untitled1/data_out.txt'\cf5 ,\cf7 'w'\cf2 )\
\
list = number_in_list()\
\cf5 print\cf2 (list)\
\
}